package com.hiveag.geepy.pojo;
// Generated May 29, 2017 4:55:35 PM by Hibernate Tools 4.3.5.Final

import java.time.LocalDateTime;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.Constraint;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonView;
import com.hiveag.geepy.util.View;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name = "person", schema = "public", uniqueConstraints = { @UniqueConstraint(columnNames = "pe_e_mail"),
		@UniqueConstraint(columnNames = "pe_ph_number") })
public class Person implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4553090970446310164L;
	private long peId;
	private Location location;
	private String peName;
	private String peLastName;
	private String peEMail;
	private boolean peEMailStatus;
	private long pePhNumber;
	private String pePassword;
	private Character peGenre;
	private Date peBirth;
	private Short peHeight;
	private Short peWeight;
	private short peCharacter;
	private short peDevQty;
	private String pePicPath;
	private Short peSmsCode;
	private LocalDateTime peSmsExpiration;
	private boolean pePhStatus;
	private LocalDateTime peTermTs;
	private Set<Authority> authorities = new HashSet<Authority>(0);
	private Set<Device> devices = new HashSet<Device>(0);
	private Set<Geepy> geepies = new HashSet<Geepy>(0);
	private Set<Poi> pois = new HashSet<Poi>(0);

	public Person() {
	}

	public Person(long peId, Location location, String peName, String peLastName, String peEMail, boolean peEMailStatus,
			long pePhNumber, String pePassword, short peCharacter, short peDevQty, String pePicPath,
			boolean pePhStatus) {
		this.peId = peId;
		this.location = location;
		this.peName = peName;
		this.peLastName = peLastName;
		this.peEMail = peEMail;
		this.peEMailStatus = peEMailStatus;
		this.pePhNumber = pePhNumber;
		this.pePassword = pePassword;
		this.peCharacter = peCharacter;
		this.peDevQty = peDevQty;
		this.pePicPath = pePicPath;
		this.pePhStatus = pePhStatus;
	}

	public Person(long peId, Location location, String peName, String peLastName, String peEMail, boolean peEMailStatus,
			long pePhNumber, String pePassword, Character peGenre, Date peBirth, Short peHeight, Short peWeight,
			short peCharacter, short peDevQty, String pePicPath, Short peSmsCode, LocalDateTime peSmsExpiration,
			boolean pePhStatus, LocalDateTime peTermTs, Set<Authority> authorities, Set<Device> devices,
			Set<Geepy> geepies, Set<Poi> pois) {
		this.peId = peId;
		this.location = location;
		this.peName = peName;
		this.peLastName = peLastName;
		this.peEMail = peEMail;
		this.peEMailStatus = peEMailStatus;
		this.pePhNumber = pePhNumber;
		this.pePassword = pePassword;
		this.peGenre = peGenre;
		this.peBirth = peBirth;
		this.peHeight = peHeight;
		this.peWeight = peWeight;
		this.peCharacter = peCharacter;
		this.peDevQty = peDevQty;
		this.pePicPath = pePicPath;
		this.peSmsCode = peSmsCode;
		this.peSmsExpiration = peSmsExpiration;
		this.pePhStatus = pePhStatus;
		this.peTermTs = peTermTs;
		this.authorities = authorities;
		this.devices = devices;
		this.geepies = geepies;
		this.pois = pois;
	}

	@Id
	@GeneratedValue(generator = "InvSeq", strategy = GenerationType.SEQUENCE)
	@SequenceGenerator(name = "InvSeq", sequenceName = "person_pe_id_seq", allocationSize = 1)
	@Column(name = "pe_id", unique = true, nullable = false)
	@JsonView(View.Summary.class)
	public long getPeId() {
		return this.peId;
	}

	public void setPeId(long peId) {
		this.peId = peId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "lo_id", nullable = false)
	@JsonView(View.Summary.class)
	public Location getLocation() {
		return this.location;
	}

	public void setLocation(Location location) {
		this.location = location;
	}

	@Column(name = "pe_name", nullable = false, length = 30)
	@JsonView(View.Summary.class)
	@Pattern(message="El nombre debe contener solo letras " , regexp="^[a-zA-ZÒ—·ÈÌÛ˙¸‡ËÏÚ˘¡…Õ”⁄‹¿»Ã“Ÿ]+(\\s[a-zA-ZÒ—·ÈÌÛ˙¸‡ËÏÚ˘¡…Õ”⁄‹¿»Ã“Ÿ]+)*$")
	@Size.List ({
	    @Size(min=3, message="el nombre debe tener  mÌnimo {min} caracteres"),
	    @Size(max=30, message="el nombre debe tener m·ximo {max} caracteres")
	})
	public String getPeName() {
		return this.peName;
	}

	public void setPeName(String peName) {
		this.peName = peName;
	}

	@Column(name = "pe_last_name", nullable = false, length = 30)
	@JsonView(View.Summary.class)
	@Pattern(message="El apellido debe contener solo letras " , regexp="^[a-zA-ZÒ—·ÈÌÛ˙¸‡ËÏÚ˘¡…Õ”⁄‹¿»Ã“Ÿ]+(\\s[a-zA-ZÒ—·ÈÌÛ˙¸‡ËÏÚ˘¡…Õ”⁄‹¿»Ã“Ÿ]+)*$")
	@Size.List ({
	    @Size(min=3, message="el apellido  debe tener  mÌnimo {min} caracteres"),
	    @Size(max=30, message="el apellido  debe tener m·ximo {max} caracteres")
	})
	
	public String getPeLastName() {
		return this.peLastName;
	}

	public void setPeLastName(String peLastName) {
		this.peLastName = peLastName;
	}

	@Column(name = "pe_e_mail", unique = true, nullable = false, length = 100)
	@Email(message = "no es un correo correcto")
	@JsonView(View.Summary.class)
	public String getPeEMail() {
		return this.peEMail;
	}

	public void setPeEMail(String peEMail) {
		this.peEMail = peEMail;
	}

	@Column(name = "pe_e_mail_status", nullable = false)
	public boolean isPeEMailStatus() {
		return this.peEMailStatus;
	}

	public void setPeEMailStatus(boolean peEMailStatus) {
		this.peEMailStatus = peEMailStatus;
	}

	@Column(name = "pe_ph_number", unique = true, nullable = false)
	@JsonView(View.Summary.class)
	public long getPePhNumber() {
		return this.pePhNumber;
	}

	public void setPePhNumber(long pePhNumber) {
		this.pePhNumber = pePhNumber;
	}

	@Column(name = "pe_password", nullable = false, length = 100)
	@Pattern.List({ @Pattern(regexp = "(?=.*[0-9]).+", message = "Password must contain one digit."),
			@Pattern(regexp = "(?=.*[a-z]).+", message = "Password must contain one lowercase letter."),
			@Pattern(regexp = "(?=.*[A-Z]).+", message = "Password must contain one upper letter."),
			@Pattern(regexp = "(?=.*[!@#$%^&*+=?-_()/\"\\.,<>~`;:]).+", message = "Password must contain one special character."),
			@Pattern(regexp = "(?=\\S+$).+", message = "Password must contain no whitespace.") })
	public String getPePassword() {
		return this.pePassword;
	}

	public void setPePassword(String pePassword) {
		this.pePassword = pePassword;
	}

	@Column(name = "pe_genre", length = 1)
	@JsonView(View.Summary.class)
	public Character getPeGenre() {
		return this.peGenre;
	}

	public void setPeGenre(Character peGenre) {
		this.peGenre = peGenre;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "pe_birth", length = 13)
	@JsonView(View.Summary.class)
	public Date getPeBirth() {
		return this.peBirth;
	}

	public void setPeBirth(Date peBirth) {
		this.peBirth = peBirth;
	}

	@Column(name = "pe_height")
	@Min(value = 80, message = " altura mÌnima 80  ")
	@Max(value = 240, message = "altura m·xima 240")
	@JsonView(View.Summary.class)
	public Short getPeHeight() {
		return this.peHeight;
	}

	public void setPeHeight(Short peHeight) {
		this.peHeight = peHeight;
	}

	@Column(name = "pe_weight")
	@Min(value = 15, message = " peso mÌnimo 15 ")
	@Max(value = 200, message = "peso m·ximo 200")
	@JsonView(View.Summary.class)
	public Short getPeWeight() {
		return this.peWeight;
	}

	public void setPeWeight(Short peWeight) {
		this.peWeight = peWeight;
	}

	@Column(name = "pe_character", nullable = false)
	@JsonView(View.Summary.class)
	public short getPeCharacter() {
		return this.peCharacter;
	}

	public void setPeCharacter(short peCharacter) {
		this.peCharacter = peCharacter;
	}

	@Column(name = "pe_dev_qty", nullable = false)
	@JsonView(View.Summary.class)
	public short getPeDevQty() {
		return this.peDevQty;
	}

	public void setPeDevQty(short peDevQty) {
		this.peDevQty = peDevQty;
	}

	@Column(name = "pe_pic_path", nullable = false, length = 50)
	@JsonView(View.Summary.class)
	public String getPePicPath() {
		return this.pePicPath;
	}

	public void setPePicPath(String pePicPath) {
		this.pePicPath = pePicPath;
	}

	@Column(name = "pe_sms_code")
	@JsonView(View.Summary.class)
	public Short getPeSmsCode() {
		return this.peSmsCode;
	}

	public void setPeSmsCode(Short peSmsCode) {
		this.peSmsCode = peSmsCode;
	}

	@Column(name = "pe_sms_expiration", length = 35)
	@JsonView(View.Summary.class)
	public LocalDateTime getPeSmsExpiration() {
		return this.peSmsExpiration;
	}

	public void setPeSmsExpiration(LocalDateTime peSmsExpiration) {
		this.peSmsExpiration = peSmsExpiration;
	}

	@Column(name = "pe_ph_status", nullable = false)
	@JsonView(View.Summary.class)
	public boolean isPePhStatus() {
		return this.pePhStatus;
	}

	public void setPePhStatus(boolean pePhStatus) {
		this.pePhStatus = pePhStatus;
	}

	@Column(name = "pe_term_ts", length = 35)
	@JsonView(View.Summary.class)
	public LocalDateTime getPeTermTs() {
		return peTermTs;
	}

	public void setPeTermTs(LocalDateTime peTermTs) {
		this.peTermTs = peTermTs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Authority> getAuthorities() {
		return this.authorities;
	}

	public void setAuthorities(Set<Authority> authorities) {
		this.authorities = authorities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Device> getDevices() {
		return this.devices;
	}

	public void setDevices(Set<Device> devices) {
		this.devices = devices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Geepy> getGeepies() {
		return this.geepies;
	}

	public void setGeepies(Set<Geepy> geepies) {
		this.geepies = geepies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Poi> getPois() {
		return this.pois;
	}

	public void setPois(Set<Poi> pois) {
		this.pois = pois;
	}

}
